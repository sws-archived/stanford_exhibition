<?php
/**
 * File
 * This module overrides the functionality found at /events/upcoming-events
 */

/**
 * hook_field_views_data_alter
 * hook_field_views_data_views_data_alter
 * hook_views_data_alter
 *
 * hook_views_pre_execute
 * hook_views_query_alter
 *
 */

/**
 * Alter all the things!
 * @param  [type] $view [description]
 * @return [type]       [description]
 */
function stanford_exhibition_events_takeover_views_pre_build(&$view) {

    $path = current_path();
    if (arg(0) !== "events" && arg(1) !== "upcoming-events") {
      return;
    }

    $args = _seset_check_args();
    if(!$args) {
      return;
    }

    if ($view->name == "stanford_events_views" && $view->current_display == 'block_1') {
      seset_block1($view);
    }

    if ($view->name == "stanford_events_calendar" && $view->current_display == 'block_1') {
      seset_cal_block1($view);
    }

    if ($view->name == "stanford_events_views" && $view->current_display == 'page') {
      seset_page($view);
    }

    if ($view->name == "stanford_exhibitions" && $view->current_display == 'current_exhibitions_block') {
      seset_current_exhibitions_block($view);
    }

    if ($view->name == "stanford_exhibitions" && $view->current_display == 'upcoming_exhibitions_block') {
      seset_upcoming_exhibitions_block($view);
    }
}

/**
 *
 * @param $view
 */
function seset_block1(&$view) {

}

/**
 *
 * @param $view
 */
function seset_cal_block1(&$view) {

}

/**
 *
 * @param $view
 */
function seset_page(&$view) {

  $args = _seset_get_args();
  $minmax = _seset_get_minmax($args);

  $view->filter['field_stanford_event_datetime_value']->operator = "between";
  $view->filter['field_stanford_event_datetime_value']->value['min'] = $minmax['min'];
  $view->filter['field_stanford_event_datetime_value']->value['max'] = $minmax['max'];

  $view->filter['field_stanford_event_datetime_value']->options['operator'] = 'between';
  $view->filter['field_stanford_event_datetime_value']->options['value']['max'] = $minmax['max'];
  $view->filter['field_stanford_event_datetime_value']->options['value']['min'] = $minmax['min'];

  $view->filter['field_stanford_event_datetime_value']->format = 'Y-m-d';

}

/**
 *
 * @param $view
 */
function seset_current_exhibitions_block(&$view) {
    $args = _seset_get_args();
    $minmax = _seset_get_minmax($args);

    $view->empty = array();
    $view->display_handler->options['empty'] = array();
    $view->display_handler->display->dispaly_options['empty'] = array();

    $view->filter['field_s_exh_dates_duration_value']->value['min'] = $minmax['min'];
    $view->filter['field_s_exh_dates_duration_value']->value['type'] = 'date';
    $view->filter['field_s_exh_dates_duration_value']->options['value']['min'] = $minmax['min'];
    $view->filter['field_s_exh_dates_duration_value']->options['value']['type'] = 'date';
    $view->filter['field_s_exh_dates_duration_value']->options['default_date'] = '';

    $view->filter['field_s_exh_dates_duration_value2']->value['max'] = $minmax['max'];
    $view->filter['field_s_exh_dates_duration_value2']->value['type'] = 'date';
    $view->filter['field_s_exh_dates_duration_value2']->options['value']['max'] = $minmax['max'];
    $view->filter['field_s_exh_dates_duration_value2']->options['value']['type'] = 'date';
    $view->filter['field_s_exh_dates_duration_value2']->options['default_date'] = '';
}

/**
 *
 * @param $view
 */
function seset_upcoming_exhibitions_block(&$view) {
    $args = _seset_get_args();
    $minmax = _seset_get_minmax($args);

    $view->filter['field_s_exh_dates_duration_value']->value['value'] = $minmax['min'];
    $view->filter['field_s_exh_dates_duration_value']->value['min'] = null;
    $view->filter['field_s_exh_dates_duration_value']->value['max'] = null;
    $view->filter['field_s_exh_dates_duration_value']->value['type'] = 'date';
    $view->filter['field_s_exh_dates_duration_value']->options['value']['value'] = $minmax['min'];
    $view->filter['field_s_exh_dates_duration_value']->options['value']['min'] = null;
    $view->filter['field_s_exh_dates_duration_value']->options['value']['max'] = null;
    $view->filter['field_s_exh_dates_duration_value']->options['value']['type'] = 'date';
    $view->filter['field_s_exh_dates_duration_value']->options['default_date'] = '';

    $view->filter['field_s_exh_dates_duration_value2'] = clone($view->filter['field_s_exh_dates_duration_value']);
    $view->filter['field_s_exh_dates_duration_value2']->operator = "<=";
    $view->filter['field_s_exh_dates_duration_value2']->value['value'] = $minmax['max'];
    $view->filter['field_s_exh_dates_duration_value2']->value['type'] = 'date';
    $view->filter['field_s_exh_dates_duration_value2']->options['value']['value'] = $minmax['max'];
    $view->filter['field_s_exh_dates_duration_value2']->options['value']['type'] = 'date';
    $view->filter['field_s_exh_dates_duration_value2']->options['default_date'] = '';
    $view->filter['field_s_exh_dates_duration_value2']->options['operator'] = "<=";

//    $view->filter['field_s_exh_dates_duration_value2']->real_field = "field_s_exh_dates_duration_value";
//    $view->filter['field_s_exh_dates_duration_value2']->options['id'] = "field_s_exh_dates_duration_value";
//    $view->filter['field_s_exh_dates_duration_value2']->options['field'] = "field_s_exh_dates_duration_value";
//    $view->filter['field_s_exh_dates_duration_value2']->field = "field_s_exh_dates_duration_value";

}

/**
 * Gets the args from the URL.
 * @return array|bool
 */
function _seset_get_args(){

  $args = &drupal_static(__FUNCTION__);
  if (count($args)) {
    return $args;
  }

  if (!_seset_check_args()) {
    return array('year' => date("Y"), 'month' => date('m'));
  }

  $explodey = explode("-", $_REQUEST['mini']);
  $args['year'] = (is_numeric($explodey[0])) ? $explodey[0] : date("Y");
  $args['month'] = (is_numeric($explodey[1])) ? $explodey[1] : date("m");

  return $args;
}

/**
 * Checks for the required url param. Returns true if present.
 * @return bool
 */
function _seset_check_args() {
  if (isset($_REQUEST['mini'])) {
    return true;
  }
  return false;
}

/**
 * Returns the current month and next month as min & max dates.
 * @param $args
 * @return array
 */
function _seset_get_minmax($args) {
  $minT = mktime(0, 0, 0, $args['month'], 1, $args['year']);
  $min = date('Y-m-d', $minT);

  $maxD = new DateTime(date('Y-m-d', $minT));
  $maxD->modify('first day of next month');
  $max = $maxD->format('Y-m-d');

  return array('min' => $min, 'max' => $max);
}
